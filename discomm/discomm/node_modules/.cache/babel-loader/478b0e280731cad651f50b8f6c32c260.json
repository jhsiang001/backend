{"ast":null,"code":"(function ($) {\n  \"use strict\";\n\n  var defaultOptions = {\n    tagClass: function (item) {\n      return 'label label-info';\n    },\n    itemValue: function (item) {\n      return item ? item.toString() : item;\n    },\n    itemText: function (item) {\n      return this.itemValue(item);\n    },\n    itemTitle: function (item) {\n      return null;\n    },\n    freeInput: true,\n    addOnBlur: true,\n    maxTags: undefined,\n    maxChars: undefined,\n    confirmKeys: [13, 44],\n    delimiter: ',',\n    delimiterRegex: null,\n    cancelConfirmKeysOnEmpty: true,\n    onTagExists: function (item, $tag) {\n      $tag.hide().fadeIn();\n    },\n    trimValue: false,\n    allowDuplicates: false\n  };\n  /**\n   * Constructor function\n   */\n\n  function TagsInput(element, options) {\n    this.itemsArray = [];\n    this.$element = $(element);\n    this.$element.hide();\n    this.isSelect = element.tagName === 'SELECT';\n    this.multiple = this.isSelect && element.hasAttribute('multiple');\n    this.objectItems = options && options.itemValue;\n    this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\n    this.inputSize = Math.max(1, this.placeholderText.length);\n    this.$container = $('<div class=\"bootstrap-tagsinput\"></div>');\n    this.$input = $('<input type=\"text\" placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\n    this.$element.before(this.$container);\n    this.build(options);\n  }\n\n  TagsInput.prototype = {\n    constructor: TagsInput,\n\n    /**\n     * Adds the given item as a new tag. Pass true to dontPushVal to prevent\n     * updating the elements val()\n     */\n    add: function (item, dontPushVal, options) {\n      var self = this;\n      if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags) return; // Ignore falsey values, except false\n\n      if (item !== false && !item) return; // Trim value\n\n      if (typeof item === \"string\" && self.options.trimValue) {\n        item = $.trim(item);\n      } // Throw an error when trying to add an object while the itemValue option was not set\n\n\n      if (typeof item === \"object\" && !self.objectItems) throw \"Can't add objects when itemValue option is not set\"; // Ignore strings only containg whitespace\n\n      if (item.toString().match(/^\\s*$/)) return; // If SELECT but not multiple, remove current tag\n\n      if (self.isSelect && !self.multiple && self.itemsArray.length > 0) self.remove(self.itemsArray[0]);\n\n      if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT') {\n        var delimiter = self.options.delimiterRegex ? self.options.delimiterRegex : self.options.delimiter;\n        var items = item.split(delimiter);\n\n        if (items.length > 1) {\n          for (var i = 0; i < items.length; i++) {\n            this.add(items[i], true);\n          }\n\n          if (!dontPushVal) self.pushVal();\n          return;\n        }\n      }\n\n      var itemValue = self.options.itemValue(item),\n          itemText = self.options.itemText(item),\n          tagClass = self.options.tagClass(item),\n          itemTitle = self.options.itemTitle(item); // Ignore items allready added\n\n      var existing = $.grep(self.itemsArray, function (item) {\n        return self.options.itemValue(item) === itemValue;\n      })[0];\n\n      if (existing && !self.options.allowDuplicates) {\n        // Invoke onTagExists\n        if (self.options.onTagExists) {\n          var $existingTag = $(\".tag\", self.$container).filter(function () {\n            return $(this).data(\"item\") === existing;\n          });\n          self.options.onTagExists(item, $existingTag);\n        }\n\n        return;\n      } // if length greater than limit\n\n\n      if (self.items().toString().length + item.length + 1 > self.options.maxInputLength) return; // raise beforeItemAdd arg\n\n      var beforeItemAddEvent = $.Event('beforeItemAdd', {\n        item: item,\n        cancel: false,\n        options: options\n      });\n      self.$element.trigger(beforeItemAddEvent);\n      if (beforeItemAddEvent.cancel) return; // register item in internal array and map\n\n      self.itemsArray.push(item); // add a tag element\n\n      var $tag = $('<span class=\"tag ' + htmlEncode(tagClass) + (itemTitle !== null ? '\" title=\"' + itemTitle : '') + '\">' + htmlEncode(itemText) + '<span data-role=\"remove\"></span></span>');\n      $tag.data('item', item);\n      self.findInputWrapper().before($tag);\n      $tag.after(' '); // add <option /> if item represents a value not present in one of the <select />'s options\n\n      if (self.isSelect && !$('option[value=\"' + encodeURIComponent(itemValue) + '\"]', self.$element)[0]) {\n        var $option = $('<option selected>' + htmlEncode(itemText) + '</option>');\n        $option.data('item', item);\n        $option.attr('value', itemValue);\n        self.$element.append($option);\n      }\n\n      if (!dontPushVal) self.pushVal(); // Add class when reached maxTags\n\n      if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength) self.$container.addClass('bootstrap-tagsinput-max');\n      self.$element.trigger($.Event('itemAdded', {\n        item: item,\n        options: options\n      }));\n    },\n\n    /**\n     * Removes the given item. Pass true to dontPushVal to prevent updating the\n     * elements val()\n     */\n    remove: function (item, dontPushVal, options) {\n      var self = this;\n\n      if (self.objectItems) {\n        if (typeof item === \"object\") item = $.grep(self.itemsArray, function (other) {\n          return self.options.itemValue(other) == self.options.itemValue(item);\n        });else item = $.grep(self.itemsArray, function (other) {\n          return self.options.itemValue(other) == item;\n        });\n        item = item[item.length - 1];\n      }\n\n      if (item) {\n        var beforeItemRemoveEvent = $.Event('beforeItemRemove', {\n          item: item,\n          cancel: false,\n          options: options\n        });\n        self.$element.trigger(beforeItemRemoveEvent);\n        if (beforeItemRemoveEvent.cancel) return;\n        $('.tag', self.$container).filter(function () {\n          return $(this).data('item') === item;\n        }).remove();\n        $('option', self.$element).filter(function () {\n          return $(this).data('item') === item;\n        }).remove();\n        if ($.inArray(item, self.itemsArray) !== -1) self.itemsArray.splice($.inArray(item, self.itemsArray), 1);\n      }\n\n      if (!dontPushVal) self.pushVal(); // Remove class when reached maxTags\n\n      if (self.options.maxTags > self.itemsArray.length) self.$container.removeClass('bootstrap-tagsinput-max');\n      self.$element.trigger($.Event('itemRemoved', {\n        item: item,\n        options: options\n      }));\n    },\n\n    /**\n     * Removes all items\n     */\n    removeAll: function () {\n      var self = this;\n      $('.tag', self.$container).remove();\n      $('option', self.$element).remove();\n\n      while (self.itemsArray.length > 0) self.itemsArray.pop();\n\n      self.pushVal();\n    },\n\n    /**\n     * Refreshes the tags so they match the text/value of their corresponding\n     * item.\n     */\n    refresh: function () {\n      var self = this;\n      $('.tag', self.$container).each(function () {\n        var $tag = $(this),\n            item = $tag.data('item'),\n            itemValue = self.options.itemValue(item),\n            itemText = self.options.itemText(item),\n            tagClass = self.options.tagClass(item); // Update tag's class and inner text\n\n        $tag.attr('class', null);\n        $tag.addClass('tag ' + htmlEncode(tagClass));\n        $tag.contents().filter(function () {\n          return this.nodeType == 3;\n        })[0].nodeValue = htmlEncode(itemText);\n\n        if (self.isSelect) {\n          var option = $('option', self.$element).filter(function () {\n            return $(this).data('item') === item;\n          });\n          option.attr('value', itemValue);\n        }\n      });\n    },\n\n    /**\n     * Returns the items added as tags\n     */\n    items: function () {\n      return this.itemsArray;\n    },\n\n    /**\n     * Assembly value by retrieving the value of each item, and set it on the\n     * element.\n     */\n    pushVal: function () {\n      var self = this,\n          val = $.map(self.items(), function (item) {\n        return self.options.itemValue(item).toString();\n      });\n      self.$element.val(val, true).trigger('change');\n    },\n\n    /**\n     * Initializes the tags input behaviour on the element\n     */\n    build: function (options) {\n      var self = this;\n      self.options = $.extend({}, defaultOptions, options); // When itemValue is set, freeInput should always be false\n\n      if (self.objectItems) self.options.freeInput = false;\n      makeOptionItemFunction(self.options, 'itemValue');\n      makeOptionItemFunction(self.options, 'itemText');\n      makeOptionFunction(self.options, 'tagClass'); // Typeahead Bootstrap version 2.3.2\n\n      if (self.options.typeahead) {\n        var typeahead = self.options.typeahead || {};\n        makeOptionFunction(typeahead, 'source');\n        self.$input.typeahead($.extend({}, typeahead, {\n          source: function (query, process) {\n            function processItems(items) {\n              var texts = [];\n\n              for (var i = 0; i < items.length; i++) {\n                var text = self.options.itemText(items[i]);\n                map[text] = items[i];\n                texts.push(text);\n              }\n\n              process(texts);\n            }\n\n            this.map = {};\n            var map = this.map,\n                data = typeahead.source(query);\n\n            if ($.isFunction(data.success)) {\n              // support for Angular callbacks\n              data.success(processItems);\n            } else if ($.isFunction(data.then)) {\n              // support for Angular promises\n              data.then(processItems);\n            } else {\n              // support for functions and jquery promises\n              $.when(data).then(processItems);\n            }\n          },\n          updater: function (text) {\n            self.add(this.map[text]);\n            return this.map[text];\n          },\n          matcher: function (text) {\n            return text.toLowerCase().indexOf(this.query.trim().toLowerCase()) !== -1;\n          },\n          sorter: function (texts) {\n            return texts.sort();\n          },\n          highlighter: function (text) {\n            var regex = new RegExp('(' + this.query + ')', 'gi');\n            return text.replace(regex, \"<strong>$1</strong>\");\n          }\n        }));\n      } // typeahead.js\n\n\n      if (self.options.typeaheadjs) {\n        var typeaheadConfig = null;\n        var typeaheadDatasets = {}; // Determine if main configurations were passed or simply a dataset\n\n        var typeaheadjs = self.options.typeaheadjs;\n\n        if ($.isArray(typeaheadjs)) {\n          typeaheadConfig = typeaheadjs[0];\n          typeaheadDatasets = typeaheadjs[1];\n        } else {\n          typeaheadDatasets = typeaheadjs;\n        }\n\n        self.$input.typeahead(typeaheadConfig, typeaheadDatasets).on('typeahead:selected', $.proxy(function (obj, datum) {\n          if (typeaheadDatasets.valueKey) self.add(datum[typeaheadDatasets.valueKey]);else self.add(datum);\n          self.$input.typeahead('val', '');\n        }, self));\n      }\n\n      self.$container.on('click', $.proxy(function (event) {\n        if (!self.$element.attr('disabled')) {\n          self.$input.removeAttr('disabled');\n        }\n\n        self.$input.focus();\n      }, self));\n\n      if (self.options.addOnBlur && self.options.freeInput) {\n        self.$input.on('focusout', $.proxy(function (event) {\n          // HACK: only process on focusout when no typeahead opened, to\n          //       avoid adding the typeahead text as tag\n          if ($('.typeahead, .twitter-typeahead', self.$container).length === 0) {\n            self.add(self.$input.val());\n            self.$input.val('');\n          }\n        }, self));\n      }\n\n      self.$container.on('keydown', 'input', $.proxy(function (event) {\n        var $input = $(event.target),\n            $inputWrapper = self.findInputWrapper();\n\n        if (self.$element.attr('disabled')) {\n          self.$input.attr('disabled', 'disabled');\n          return;\n        }\n\n        switch (event.which) {\n          // BACKSPACE\n          case 8:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var prev = $inputWrapper.prev();\n\n              if (prev.length) {\n                self.remove(prev.data('item'));\n              }\n            }\n\n            break;\n          // DELETE\n\n          case 46:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var next = $inputWrapper.next();\n\n              if (next.length) {\n                self.remove(next.data('item'));\n              }\n            }\n\n            break;\n          // LEFT ARROW\n\n          case 37:\n            // Try to move the input before the previous tag\n            var $prevTag = $inputWrapper.prev();\n\n            if ($input.val().length === 0 && $prevTag[0]) {\n              $prevTag.before($inputWrapper);\n              $input.focus();\n            }\n\n            break;\n          // RIGHT ARROW\n\n          case 39:\n            // Try to move the input after the next tag\n            var $nextTag = $inputWrapper.next();\n\n            if ($input.val().length === 0 && $nextTag[0]) {\n              $nextTag.after($inputWrapper);\n              $input.focus();\n            }\n\n            break;\n\n          default: // ignore\n\n        } // Reset internal input's size\n\n\n        var textLength = $input.val().length,\n            wordSpace = Math.ceil(textLength / 5),\n            size = textLength + wordSpace + 1;\n        $input.attr('size', Math.max(this.inputSize, $input.val().length));\n      }, self));\n      self.$container.on('keypress', 'input', $.proxy(function (event) {\n        var $input = $(event.target);\n\n        if (self.$element.attr('disabled')) {\n          self.$input.attr('disabled', 'disabled');\n          return;\n        }\n\n        var text = $input.val(),\n            maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;\n\n        if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached)) {\n          // Only attempt to add a tag if there is data in the field\n          if (text.length !== 0) {\n            self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);\n            $input.val('');\n          } // If the field is empty, let the event triggered fire as usual\n\n\n          if (self.options.cancelConfirmKeysOnEmpty === false) {\n            event.preventDefault();\n          }\n        } // Reset internal input's size\n\n\n        var textLength = $input.val().length,\n            wordSpace = Math.ceil(textLength / 5),\n            size = textLength + wordSpace + 1;\n        $input.attr('size', Math.max(this.inputSize, $input.val().length));\n      }, self)); // Remove icon clicked\n\n      self.$container.on('click', '[data-role=remove]', $.proxy(function (event) {\n        if (self.$element.attr('disabled')) {\n          return;\n        }\n\n        self.remove($(event.target).closest('.tag').data('item'));\n      }, self)); // Only add existing value as tags when using strings as tags\n\n      if (self.options.itemValue === defaultOptions.itemValue) {\n        if (self.$element[0].tagName === 'INPUT') {\n          self.add(self.$element.val());\n        } else {\n          $('option', self.$element).each(function () {\n            self.add($(this).attr('value'), true);\n          });\n        }\n      }\n    },\n\n    /**\n     * Removes all tagsinput behaviour and unregsiter all event handlers\n     */\n    destroy: function () {\n      var self = this; // Unbind events\n\n      self.$container.off('keypress', 'input');\n      self.$container.off('click', '[role=remove]');\n      self.$container.remove();\n      self.$element.removeData('tagsinput');\n      self.$element.show();\n    },\n\n    /**\n     * Sets focus on the tagsinput\n     */\n    focus: function () {\n      this.$input.focus();\n    },\n\n    /**\n     * Returns the internal input element\n     */\n    input: function () {\n      return this.$input;\n    },\n\n    /**\n     * Returns the element which is wrapped around the internal input. This\n     * is normally the $container, but typeahead.js moves the $input element.\n     */\n    findInputWrapper: function () {\n      var elt = this.$input[0],\n          container = this.$container[0];\n\n      while (elt && elt.parentNode !== container) elt = elt.parentNode;\n\n      return $(elt);\n    }\n  };\n  /**\n   * Register JQuery plugin\n   */\n\n  $.fn.tagsinput = function (arg1, arg2, arg3) {\n    var results = [];\n    this.each(function () {\n      var tagsinput = $(this).data('tagsinput'); // Initialize a new tags input\n\n      if (!tagsinput) {\n        tagsinput = new TagsInput(this, arg1);\n        $(this).data('tagsinput', tagsinput);\n        results.push(tagsinput);\n\n        if (this.tagName === 'SELECT') {\n          $('option', $(this)).attr('selected', 'selected');\n        } // Init tags from $(this).val()\n\n\n        $(this).val($(this).val());\n      } else if (!arg1 && !arg2) {\n        // tagsinput already exists\n        // no function, trying to init\n        results.push(tagsinput);\n      } else if (tagsinput[arg1] !== undefined) {\n        // Invoke function on existing tags input\n        if (tagsinput[arg1].length === 3 && arg3 !== undefined) {\n          var retVal = tagsinput[arg1](arg2, null, arg3);\n        } else {\n          var retVal = tagsinput[arg1](arg2);\n        }\n\n        if (retVal !== undefined) results.push(retVal);\n      }\n    });\n\n    if (typeof arg1 == 'string') {\n      // Return the results from the invoked function calls\n      return results.length > 1 ? results : results[0];\n    } else {\n      return results;\n    }\n  };\n\n  $.fn.tagsinput.Constructor = TagsInput;\n  /**\n   * Most options support both a string or number as well as a function as\n   * option value. This function makes sure that the option with the given\n   * key in the given options is wrapped in a function\n   */\n\n  function makeOptionItemFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var propertyName = options[key];\n\n      options[key] = function (item) {\n        return item[propertyName];\n      };\n    }\n  }\n\n  function makeOptionFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var value = options[key];\n\n      options[key] = function () {\n        return value;\n      };\n    }\n  }\n  /**\n   * HtmlEncodes the given value\n   */\n\n\n  var htmlEncodeContainer = $('<div />');\n\n  function htmlEncode(value) {\n    if (value) {\n      return htmlEncodeContainer.text(value).html();\n    } else {\n      return '';\n    }\n  }\n  /**\n   * Returns the position of the caret in the given input field\n   * http://flightschool.acylt.com/devnotes/caret-position-woes/\n   */\n\n\n  function doGetCaretPosition(oField) {\n    var iCaretPos = 0;\n\n    if (document.selection) {\n      oField.focus();\n      var oSel = document.selection.createRange();\n      oSel.moveStart('character', -oField.value.length);\n      iCaretPos = oSel.text.length;\n    } else if (oField.selectionStart || oField.selectionStart == '0') {\n      iCaretPos = oField.selectionStart;\n    }\n\n    return iCaretPos;\n  }\n  /**\n    * Returns boolean indicates whether user has pressed an expected key combination.\n    * @param object keyPressEvent: JavaScript event object, refer\n    *     http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    * @param object lookupList: expected key combinations, as in:\n    *     [13, {which: 188, shiftKey: true}]\n    */\n\n\n  function keyCombinationInList(keyPressEvent, lookupList) {\n    var found = false;\n    $.each(lookupList, function (index, keyCombination) {\n      if (typeof keyCombination === 'number' && keyPressEvent.which === keyCombination) {\n        found = true;\n        return false;\n      }\n\n      if (keyPressEvent.which === keyCombination.which) {\n        var alt = !keyCombination.hasOwnProperty('altKey') || keyPressEvent.altKey === keyCombination.altKey,\n            shift = !keyCombination.hasOwnProperty('shiftKey') || keyPressEvent.shiftKey === keyCombination.shiftKey,\n            ctrl = !keyCombination.hasOwnProperty('ctrlKey') || keyPressEvent.ctrlKey === keyCombination.ctrlKey;\n\n        if (alt && shift && ctrl) {\n          found = true;\n          return false;\n        }\n      }\n    });\n    return found;\n  }\n  /**\n   * Initialize tagsinput behaviour on inputs and selects which have\n   * data-role=tagsinput\n   */\n\n\n  $(function () {\n    $(\"input[data-role=tagsinput], select[multiple][data-role=tagsinput]\").tagsinput();\n  });\n})(window.jQuery);","map":{"version":3,"sources":["/Users/justinhsiang/discomm/discomm/src/bootstrap-tagsinput.js"],"names":["$","defaultOptions","tagClass","item","itemValue","toString","itemText","itemTitle","freeInput","addOnBlur","maxTags","undefined","maxChars","confirmKeys","delimiter","delimiterRegex","cancelConfirmKeysOnEmpty","onTagExists","$tag","hide","fadeIn","trimValue","allowDuplicates","TagsInput","element","options","itemsArray","$element","isSelect","tagName","multiple","hasAttribute","objectItems","placeholderText","attr","inputSize","Math","max","length","$container","$input","appendTo","before","build","prototype","constructor","add","dontPushVal","self","trim","match","remove","items","split","i","pushVal","existing","grep","$existingTag","filter","data","maxInputLength","beforeItemAddEvent","Event","cancel","trigger","push","htmlEncode","findInputWrapper","after","encodeURIComponent","$option","append","addClass","other","beforeItemRemoveEvent","inArray","splice","removeClass","removeAll","pop","refresh","each","contents","nodeType","nodeValue","option","val","map","extend","makeOptionItemFunction","makeOptionFunction","typeahead","source","query","process","processItems","texts","text","isFunction","success","then","when","updater","matcher","toLowerCase","indexOf","sorter","sort","highlighter","regex","RegExp","replace","typeaheadjs","typeaheadConfig","typeaheadDatasets","isArray","on","proxy","obj","datum","valueKey","event","removeAttr","focus","target","$inputWrapper","which","doGetCaretPosition","prev","next","$prevTag","$nextTag","textLength","wordSpace","ceil","size","maxLengthReached","keyCombinationInList","substr","preventDefault","closest","destroy","off","removeData","show","input","elt","container","parentNode","fn","tagsinput","arg1","arg2","arg3","results","retVal","Constructor","key","propertyName","value","htmlEncodeContainer","html","oField","iCaretPos","document","selection","oSel","createRange","moveStart","selectionStart","keyPressEvent","lookupList","found","index","keyCombination","alt","hasOwnProperty","altKey","shift","shiftKey","ctrl","ctrlKey","window","jQuery"],"mappings":"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","sourcesContent":["(function ($) {\n  \"use strict\";\n\n  var defaultOptions = {\n    tagClass: function(item) {\n      return 'label label-info';\n    },\n    itemValue: function(item) {\n      return item ? item.toString() : item;\n    },\n    itemText: function(item) {\n      return this.itemValue(item);\n    },\n    itemTitle: function(item) {\n      return null;\n    },\n    freeInput: true,\n    addOnBlur: true,\n    maxTags: undefined,\n    maxChars: undefined,\n    confirmKeys: [13, 44],\n    delimiter: ',',\n    delimiterRegex: null,\n    cancelConfirmKeysOnEmpty: true,\n    onTagExists: function(item, $tag) {\n      $tag.hide().fadeIn();\n    },\n    trimValue: false,\n    allowDuplicates: false\n  };\n\n  /**\n   * Constructor function\n   */\n  function TagsInput(element, options) {\n    this.itemsArray = [];\n\n    this.$element = $(element);\n    this.$element.hide();\n\n    this.isSelect = (element.tagName === 'SELECT');\n    this.multiple = (this.isSelect && element.hasAttribute('multiple'));\n    this.objectItems = options && options.itemValue;\n    this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\n    this.inputSize = Math.max(1, this.placeholderText.length);\n\n    this.$container = $('<div class=\"bootstrap-tagsinput\"></div>');\n    this.$input = $('<input type=\"text\" placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\n\n    this.$element.before(this.$container);\n\n    this.build(options);\n  }\n\n  TagsInput.prototype = {\n    constructor: TagsInput,\n\n    /**\n     * Adds the given item as a new tag. Pass true to dontPushVal to prevent\n     * updating the elements val()\n     */\n    add: function(item, dontPushVal, options) {\n      var self = this;\n\n      if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)\n        return;\n\n      // Ignore falsey values, except false\n      if (item !== false && !item)\n        return;\n\n      // Trim value\n      if (typeof item === \"string\" && self.options.trimValue) {\n        item = $.trim(item);\n      }\n\n      // Throw an error when trying to add an object while the itemValue option was not set\n      if (typeof item === \"object\" && !self.objectItems)\n        throw(\"Can't add objects when itemValue option is not set\");\n\n      // Ignore strings only containg whitespace\n      if (item.toString().match(/^\\s*$/))\n        return;\n\n      // If SELECT but not multiple, remove current tag\n      if (self.isSelect && !self.multiple && self.itemsArray.length > 0)\n        self.remove(self.itemsArray[0]);\n\n      if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT') {\n        var delimiter = (self.options.delimiterRegex) ? self.options.delimiterRegex : self.options.delimiter;\n        var items = item.split(delimiter);\n        if (items.length > 1) {\n          for (var i = 0; i < items.length; i++) {\n            this.add(items[i], true);\n          }\n\n          if (!dontPushVal)\n            self.pushVal();\n          return;\n        }\n      }\n\n      var itemValue = self.options.itemValue(item),\n          itemText = self.options.itemText(item),\n          tagClass = self.options.tagClass(item),\n          itemTitle = self.options.itemTitle(item);\n\n      // Ignore items allready added\n      var existing = $.grep(self.itemsArray, function(item) { return self.options.itemValue(item) === itemValue; } )[0];\n      if (existing && !self.options.allowDuplicates) {\n        // Invoke onTagExists\n        if (self.options.onTagExists) {\n          var $existingTag = $(\".tag\", self.$container).filter(function() { return $(this).data(\"item\") === existing; });\n          self.options.onTagExists(item, $existingTag);\n        }\n        return;\n      }\n\n      // if length greater than limit\n      if (self.items().toString().length + item.length + 1 > self.options.maxInputLength)\n        return;\n\n      // raise beforeItemAdd arg\n      var beforeItemAddEvent = $.Event('beforeItemAdd', { item: item, cancel: false, options: options});\n      self.$element.trigger(beforeItemAddEvent);\n      if (beforeItemAddEvent.cancel)\n        return;\n\n      // register item in internal array and map\n      self.itemsArray.push(item);\n\n      // add a tag element\n\n      var $tag = $('<span class=\"tag ' + htmlEncode(tagClass) + (itemTitle !== null ? ('\" title=\"' + itemTitle) : '') + '\">' + htmlEncode(itemText) + '<span data-role=\"remove\"></span></span>');\n      $tag.data('item', item);\n      self.findInputWrapper().before($tag);\n      $tag.after(' ');\n\n      // add <option /> if item represents a value not present in one of the <select />'s options\n      if (self.isSelect && !$('option[value=\"' + encodeURIComponent(itemValue) + '\"]',self.$element)[0]) {\n        var $option = $('<option selected>' + htmlEncode(itemText) + '</option>');\n        $option.data('item', item);\n        $option.attr('value', itemValue);\n        self.$element.append($option);\n      }\n\n      if (!dontPushVal)\n        self.pushVal();\n\n      // Add class when reached maxTags\n      if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength)\n        self.$container.addClass('bootstrap-tagsinput-max');\n\n      self.$element.trigger($.Event('itemAdded', { item: item, options: options }));\n    },\n\n    /**\n     * Removes the given item. Pass true to dontPushVal to prevent updating the\n     * elements val()\n     */\n    remove: function(item, dontPushVal, options) {\n      var self = this;\n\n      if (self.objectItems) {\n        if (typeof item === \"object\")\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  self.options.itemValue(item); } );\n        else\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  item; } );\n\n        item = item[item.length-1];\n      }\n\n      if (item) {\n        var beforeItemRemoveEvent = $.Event('beforeItemRemove', { item: item, cancel: false, options: options });\n        self.$element.trigger(beforeItemRemoveEvent);\n        if (beforeItemRemoveEvent.cancel)\n          return;\n\n        $('.tag', self.$container).filter(function() { return $(this).data('item') === item; }).remove();\n        $('option', self.$element).filter(function() { return $(this).data('item') === item; }).remove();\n        if($.inArray(item, self.itemsArray) !== -1)\n          self.itemsArray.splice($.inArray(item, self.itemsArray), 1);\n      }\n\n      if (!dontPushVal)\n        self.pushVal();\n\n      // Remove class when reached maxTags\n      if (self.options.maxTags > self.itemsArray.length)\n        self.$container.removeClass('bootstrap-tagsinput-max');\n\n      self.$element.trigger($.Event('itemRemoved',  { item: item, options: options }));\n    },\n\n    /**\n     * Removes all items\n     */\n    removeAll: function() {\n      var self = this;\n\n      $('.tag', self.$container).remove();\n      $('option', self.$element).remove();\n\n      while(self.itemsArray.length > 0)\n        self.itemsArray.pop();\n\n      self.pushVal();\n    },\n\n    /**\n     * Refreshes the tags so they match the text/value of their corresponding\n     * item.\n     */\n    refresh: function() {\n      var self = this;\n      $('.tag', self.$container).each(function() {\n        var $tag = $(this),\n            item = $tag.data('item'),\n            itemValue = self.options.itemValue(item),\n            itemText = self.options.itemText(item),\n            tagClass = self.options.tagClass(item);\n\n          // Update tag's class and inner text\n          $tag.attr('class', null);\n          $tag.addClass('tag ' + htmlEncode(tagClass));\n          $tag.contents().filter(function() {\n            return this.nodeType == 3;\n          })[0].nodeValue = htmlEncode(itemText);\n\n          if (self.isSelect) {\n            var option = $('option', self.$element).filter(function() { return $(this).data('item') === item; });\n            option.attr('value', itemValue);\n          }\n      });\n    },\n\n    /**\n     * Returns the items added as tags\n     */\n    items: function() {\n      return this.itemsArray;\n    },\n\n    /**\n     * Assembly value by retrieving the value of each item, and set it on the\n     * element.\n     */\n    pushVal: function() {\n      var self = this,\n          val = $.map(self.items(), function(item) {\n            return self.options.itemValue(item).toString();\n          });\n\n      self.$element.val(val, true).trigger('change');\n    },\n\n    /**\n     * Initializes the tags input behaviour on the element\n     */\n    build: function(options) {\n      var self = this;\n\n      self.options = $.extend({}, defaultOptions, options);\n      // When itemValue is set, freeInput should always be false\n      if (self.objectItems)\n        self.options.freeInput = false;\n\n      makeOptionItemFunction(self.options, 'itemValue');\n      makeOptionItemFunction(self.options, 'itemText');\n      makeOptionFunction(self.options, 'tagClass');\n\n      // Typeahead Bootstrap version 2.3.2\n      if (self.options.typeahead) {\n        var typeahead = self.options.typeahead || {};\n\n        makeOptionFunction(typeahead, 'source');\n\n        self.$input.typeahead($.extend({}, typeahead, {\n          source: function (query, process) {\n            function processItems(items) {\n              var texts = [];\n\n              for (var i = 0; i < items.length; i++) {\n                var text = self.options.itemText(items[i]);\n                map[text] = items[i];\n                texts.push(text);\n              }\n              process(texts);\n            }\n\n            this.map = {};\n            var map = this.map,\n                data = typeahead.source(query);\n\n            if ($.isFunction(data.success)) {\n              // support for Angular callbacks\n              data.success(processItems);\n            } else if ($.isFunction(data.then)) {\n              // support for Angular promises\n              data.then(processItems);\n            } else {\n              // support for functions and jquery promises\n              $.when(data)\n               .then(processItems);\n            }\n          },\n          updater: function (text) {\n            self.add(this.map[text]);\n            return this.map[text];\n          },\n          matcher: function (text) {\n            return (text.toLowerCase().indexOf(this.query.trim().toLowerCase()) !== -1);\n          },\n          sorter: function (texts) {\n            return texts.sort();\n          },\n          highlighter: function (text) {\n            var regex = new RegExp( '(' + this.query + ')', 'gi' );\n            return text.replace( regex, \"<strong>$1</strong>\" );\n          }\n        }));\n      }\n\n      // typeahead.js\n      if (self.options.typeaheadjs) {\n          var typeaheadConfig = null;\n          var typeaheadDatasets = {};\n\n          // Determine if main configurations were passed or simply a dataset\n          var typeaheadjs = self.options.typeaheadjs;\n          if ($.isArray(typeaheadjs)) {\n            typeaheadConfig = typeaheadjs[0];\n            typeaheadDatasets = typeaheadjs[1];\n          } else {\n            typeaheadDatasets = typeaheadjs;\n          }\n\n          self.$input.typeahead(typeaheadConfig, typeaheadDatasets).on('typeahead:selected', $.proxy(function (obj, datum) {\n            if (typeaheadDatasets.valueKey)\n              self.add(datum[typeaheadDatasets.valueKey]);\n            else\n              self.add(datum);\n            self.$input.typeahead('val', '');\n          }, self));\n      }\n\n      self.$container.on('click', $.proxy(function(event) {\n        if (! self.$element.attr('disabled')) {\n          self.$input.removeAttr('disabled');\n        }\n        self.$input.focus();\n      }, self));\n\n        if (self.options.addOnBlur && self.options.freeInput) {\n          self.$input.on('focusout', $.proxy(function(event) {\n              // HACK: only process on focusout when no typeahead opened, to\n              //       avoid adding the typeahead text as tag\n              if ($('.typeahead, .twitter-typeahead', self.$container).length === 0) {\n                self.add(self.$input.val());\n                self.$input.val('');\n              }\n          }, self));\n        }\n\n\n      self.$container.on('keydown', 'input', $.proxy(function(event) {\n        var $input = $(event.target),\n            $inputWrapper = self.findInputWrapper();\n\n        if (self.$element.attr('disabled')) {\n          self.$input.attr('disabled', 'disabled');\n          return;\n        }\n\n        switch (event.which) {\n          // BACKSPACE\n          case 8:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var prev = $inputWrapper.prev();\n              if (prev.length) {\n                self.remove(prev.data('item'));\n              }\n            }\n            break;\n\n          // DELETE\n          case 46:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var next = $inputWrapper.next();\n              if (next.length) {\n                self.remove(next.data('item'));\n              }\n            }\n            break;\n\n          // LEFT ARROW\n          case 37:\n            // Try to move the input before the previous tag\n            var $prevTag = $inputWrapper.prev();\n            if ($input.val().length === 0 && $prevTag[0]) {\n              $prevTag.before($inputWrapper);\n              $input.focus();\n            }\n            break;\n          // RIGHT ARROW\n          case 39:\n            // Try to move the input after the next tag\n            var $nextTag = $inputWrapper.next();\n            if ($input.val().length === 0 && $nextTag[0]) {\n              $nextTag.after($inputWrapper);\n              $input.focus();\n            }\n            break;\n         default:\n             // ignore\n         }\n\n        // Reset internal input's size\n        var textLength = $input.val().length,\n            wordSpace = Math.ceil(textLength / 5),\n            size = textLength + wordSpace + 1;\n        $input.attr('size', Math.max(this.inputSize, $input.val().length));\n      }, self));\n\n      self.$container.on('keypress', 'input', $.proxy(function(event) {\n         var $input = $(event.target);\n\n         if (self.$element.attr('disabled')) {\n            self.$input.attr('disabled', 'disabled');\n            return;\n         }\n\n         var text = $input.val(),\n         maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;\n         if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached)) {\n            // Only attempt to add a tag if there is data in the field\n            if (text.length !== 0) {\n               self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);\n               $input.val('');\n            }\n\n            // If the field is empty, let the event triggered fire as usual\n            if (self.options.cancelConfirmKeysOnEmpty === false) {\n               event.preventDefault();\n            }\n         }\n\n         // Reset internal input's size\n         var textLength = $input.val().length,\n            wordSpace = Math.ceil(textLength / 5),\n            size = textLength + wordSpace + 1;\n         $input.attr('size', Math.max(this.inputSize, $input.val().length));\n      }, self));\n\n      // Remove icon clicked\n      self.$container.on('click', '[data-role=remove]', $.proxy(function(event) {\n        if (self.$element.attr('disabled')) {\n          return;\n        }\n        self.remove($(event.target).closest('.tag').data('item'));\n      }, self));\n\n      // Only add existing value as tags when using strings as tags\n      if (self.options.itemValue === defaultOptions.itemValue) {\n        if (self.$element[0].tagName === 'INPUT') {\n            self.add(self.$element.val());\n        } else {\n          $('option', self.$element).each(function() {\n            self.add($(this).attr('value'), true);\n          });\n        }\n      }\n    },\n\n    /**\n     * Removes all tagsinput behaviour and unregsiter all event handlers\n     */\n    destroy: function() {\n      var self = this;\n\n      // Unbind events\n      self.$container.off('keypress', 'input');\n      self.$container.off('click', '[role=remove]');\n\n      self.$container.remove();\n      self.$element.removeData('tagsinput');\n      self.$element.show();\n    },\n\n    /**\n     * Sets focus on the tagsinput\n     */\n    focus: function() {\n      this.$input.focus();\n    },\n\n    /**\n     * Returns the internal input element\n     */\n    input: function() {\n      return this.$input;\n    },\n\n    /**\n     * Returns the element which is wrapped around the internal input. This\n     * is normally the $container, but typeahead.js moves the $input element.\n     */\n    findInputWrapper: function() {\n      var elt = this.$input[0],\n          container = this.$container[0];\n      while(elt && elt.parentNode !== container)\n        elt = elt.parentNode;\n\n      return $(elt);\n    }\n  };\n\n  /**\n   * Register JQuery plugin\n   */\n  $.fn.tagsinput = function(arg1, arg2, arg3) {\n    var results = [];\n\n    this.each(function() {\n      var tagsinput = $(this).data('tagsinput');\n      // Initialize a new tags input\n      if (!tagsinput) {\n          tagsinput = new TagsInput(this, arg1);\n          $(this).data('tagsinput', tagsinput);\n          results.push(tagsinput);\n\n          if (this.tagName === 'SELECT') {\n              $('option', $(this)).attr('selected', 'selected');\n          }\n\n          // Init tags from $(this).val()\n          $(this).val($(this).val());\n      } else if (!arg1 && !arg2) {\n          // tagsinput already exists\n          // no function, trying to init\n          results.push(tagsinput);\n      } else if(tagsinput[arg1] !== undefined) {\n          // Invoke function on existing tags input\n            if(tagsinput[arg1].length === 3 && arg3 !== undefined){\n               var retVal = tagsinput[arg1](arg2, null, arg3);\n            }else{\n               var retVal = tagsinput[arg1](arg2);\n            }\n          if (retVal !== undefined)\n              results.push(retVal);\n      }\n    });\n\n    if ( typeof arg1 == 'string') {\n      // Return the results from the invoked function calls\n      return results.length > 1 ? results : results[0];\n    } else {\n      return results;\n    }\n  };\n\n  $.fn.tagsinput.Constructor = TagsInput;\n\n  /**\n   * Most options support both a string or number as well as a function as\n   * option value. This function makes sure that the option with the given\n   * key in the given options is wrapped in a function\n   */\n  function makeOptionItemFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var propertyName = options[key];\n      options[key] = function(item) { return item[propertyName]; };\n    }\n  }\n  function makeOptionFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var value = options[key];\n      options[key] = function() { return value; };\n    }\n  }\n  /**\n   * HtmlEncodes the given value\n   */\n  var htmlEncodeContainer = $('<div />');\n  function htmlEncode(value) {\n    if (value) {\n      return htmlEncodeContainer.text(value).html();\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Returns the position of the caret in the given input field\n   * http://flightschool.acylt.com/devnotes/caret-position-woes/\n   */\n  function doGetCaretPosition(oField) {\n    var iCaretPos = 0;\n    if (document.selection) {\n      oField.focus ();\n      var oSel = document.selection.createRange();\n      oSel.moveStart ('character', -oField.value.length);\n      iCaretPos = oSel.text.length;\n    } else if (oField.selectionStart || oField.selectionStart == '0') {\n      iCaretPos = oField.selectionStart;\n    }\n    return (iCaretPos);\n  }\n\n  /**\n    * Returns boolean indicates whether user has pressed an expected key combination.\n    * @param object keyPressEvent: JavaScript event object, refer\n    *     http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    * @param object lookupList: expected key combinations, as in:\n    *     [13, {which: 188, shiftKey: true}]\n    */\n  function keyCombinationInList(keyPressEvent, lookupList) {\n      var found = false;\n      $.each(lookupList, function (index, keyCombination) {\n          if (typeof (keyCombination) === 'number' && keyPressEvent.which === keyCombination) {\n              found = true;\n              return false;\n          }\n\n          if (keyPressEvent.which === keyCombination.which) {\n              var alt = !keyCombination.hasOwnProperty('altKey') || keyPressEvent.altKey === keyCombination.altKey,\n                  shift = !keyCombination.hasOwnProperty('shiftKey') || keyPressEvent.shiftKey === keyCombination.shiftKey,\n                  ctrl = !keyCombination.hasOwnProperty('ctrlKey') || keyPressEvent.ctrlKey === keyCombination.ctrlKey;\n              if (alt && shift && ctrl) {\n                  found = true;\n                  return false;\n              }\n          }\n      });\n\n      return found;\n  }\n\n  /**\n   * Initialize tagsinput behaviour on inputs and selects which have\n   * data-role=tagsinput\n   */\n  $(function() {\n    $(\"input[data-role=tagsinput], select[multiple][data-role=tagsinput]\").tagsinput();\n  });\n})(window.jQuery);\n"]},"metadata":{},"sourceType":"module"}